
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"During my PhD, my research interest revolved around conformal field theory and its relation to quantum gravity via AdS/CFT correspondence. Using the general quantitative aptitude developed through this study, I am interested in exploring the field of artificial intelligence and machine learning.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"During my PhD, my research interest revolved around conformal field theory and its relation to quantum gravity via AdS/CFT correspondence. Using the general quantitative aptitude developed through this study, I am interested in exploring the field of artificial intelligence and machine learning.","tags":null,"title":"Aaditya Salgarkar","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy‚Äôs Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"An ongoing project to understand the fundamental algorithms and data structures. This is based on the coursework provided by pashka (Pavel Marvin). It is hosted at Gitlab link.\nIt also contains the solutions to several standard and important algorithmic problems created by Antti Laaksonen. The problems can be accessed at CSES Problem Set.\n","date":1692576000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1692576000,"objectID":"e8fa42e6a4737d09a44e1166e5f27210","permalink":"https://example.com/project/algorithm-fundamentals/","publishdate":"2023-08-21T00:00:00Z","relpermalink":"/project/algorithm-fundamentals/","section":"project","summary":"Study of fundamental algorithms and data structures.","tags":["Algorithms"],"title":"Fundamentals of Algorithms","type":"project"},{"authors":null,"categories":null,"content":"An ongoing project to study the fundamental algorithms and ideas used in machine learning, including all the exercises. The topics include linear regression, logistic regression, neural networks, decision trees, ensemble methods. This is based on the coursework provided by Pascal Poupart. The coursework is hosted at Link. It is hosted at Gitlab link.\n","date":1692576000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1692576000,"objectID":"65c4a134a8947be65402def7293fd2eb","permalink":"https://example.com/project/ml-fundamentals/","publishdate":"2023-08-21T00:00:00Z","relpermalink":"/project/ml-fundamentals/","section":"project","summary":"Study of fundamental algorithms and idea in machine learning.","tags":["Algorithms"],"title":"Fundamentals of Machine learning","type":"project"},{"authors":[],"categories":[],"content":"Introduction The goal of this series of posts is to provide a comprehensive overview of tree algorithms in machine learning. We will start with the basics and then move on to more advanced topics.\nWhat is a tree algorithm? A tree algorithm is an algorithm that uses a tree data structure to solve a problem. The tree data structure is a hierarchical data structure that consists of nodes and edges. A tree is an acyclic graph, which means that there are no cycles in the graph. If there are $n$ nodes in a tree, then there are $n-1$ edges.\nTo benchmark our implementation, we will be using the Iris dataset.\nOur goal is to build a tree based classifier for this with increasing sophistication. We will first use decision stump, which is the simplest type of decision tree with a single node. Then, we will move on to decision trees with multiple nodes. By themselves, decision trees are not very powerful. Finally, we will use random forests, which are an ensemble of decision trees. This uses interesting ideas based on ensemble learning to improve the performance of decision trees.\nBenchmark We will use sci-kit learn to benchmark our implementation.\nimport sklearn as sk import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns; sns.set() import sklearn.datasets import sklearn.metrics import sklearn.model_selection iris = sk.datasets.load_iris() train_test_split = sk.model_selection.train_test_split X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2) After splitting, the training dataset has 120 elements.\nX_train.shape, y_train.shape ((120, 4), (120,)) For each of the 120 elements, a classification is done to three elemnts (0,1,2)\nnp.unique(y_train, return_counts=True) (array([0, 1, 2]), array([39, 41, 40])) We get the idea of the respective characteristics which appear as column.\nnp.amax(X_train, axis=0), np.amin(X_train, axis=0) (array([7.9, 4.4, 6.9, 2.5]), array([4.3, 2. , 1. , 0.1])) # Decision Tree from sklearn import tree clf = tree.DecisionTreeClassifier() clf = clf.fit(X_train, y_train) y_pred = clf.predict(X_test) print(\u0026#34;Decision Tree Accuracy:\u0026#34;, sklearn.metrics.accuracy_score(y_test, y_pred)) # random forest from sklearn.ensemble import RandomForestClassifier rf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0) rf.fit(X_train, y_train) y_pred = rf.predict(X_test) print(\u0026#34;Random Forest Accuracy:\u0026#34;, sklearn.metrics.accuracy_score(y_test, y_pred)) Decision Tree Accuracy: 0.9666666666666667 Random Forest Accuracy: 0.9666666666666667 Conclusion In this post, we have seen how to use decision trees and random forests to classify the Iris dataset, using library implementation in sci-kit learn. In the next post, we will see how to implement decision trees from scratch, starting with a decision stump.\nDid you find this page helpful? Consider sharing it üôå\n","date":1692345061,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1692345061,"objectID":"fbd164f3dc88e9cade1020d1c6f612d9","permalink":"https://example.com/post/tree-algos-0/","publishdate":"2023-08-18T13:21:01+05:30","relpermalink":"/post/tree-algos-0/","section":"post","summary":"Introduction The goal of this series of posts is to provide a comprehensive overview of tree algorithms in machine learning. We will start with the basics and then move on to more advanced topics.","tags":[],"title":"Tree Algorithms in machine learning: part 0","type":"post"},{"authors":null,"categories":null,"content":"Introduction We discuss a minor modification in the way numbers are written in the scientific notation with the goal to make them more readable, both for humans and computers.\nUsually, numbers such as $134139349145$ are hard to parse. First, we count the digits to see how big the number is. Then, we try to make sense of the number by looking at the leading digit. If needed, we look at more digits to get a better sense of the number. This is a lot of work.\nThe scientific notation is a way to write numbers in a more readable format. For example, the number $134139349145$ can be written as $1.34139349145 \\times 10^{11}$. This is much easier to parse. We can immediately see that the number is around $10^{11}$. In plaintext format, it can be written as 1.34139349145e11.\nHowever, it is clear that the most significant information about the number is the exponent. Unfortunately, it appears at the end.\nProposal Write m(inus)/p(lus) depending on the sign of the number. Add ‚Äôe‚Äô to indicate the exponent. Write m(inus)/p(lus) depending on the sign of the exponent. Write the exponent first in the fixed-width format (say 4). Add ‚Äòb‚Äô to indicate the base. Write the mantissa in the fixed-width format (say 4). Alternatively, use ‚Äú-\u0026#34;(ASCII 45 for minus)/‚Äù\u0026amp;nbsp;\u0026#34; (ASCII 160 for plus) rather than ‚Äúm‚Äù/‚Äúp‚Äù to indicate the sign of the number/exponent.\nExample:\n134139349145 Scientific notation: 1.34139349145e11 New notation: pep 11b1.34 Advantages The most significant information about the number, the exponent, appears first. In a sense, more scientific since it resembles pH scale, Richter scale, etc. When compared to using Log of numbers, this notation also is useful for negative numbers. Number comparison is identical both numerically and alphabetically! , $a\u0026lt;b \\iff str(a) \u0026lt; str(b)$ The last one is particularly useful in day to day life. Try sorting the following file by score.\nid: 76,score: 2528926,wrong: 0 id: 10,score: 2576082,wrong: 0 id: 56,score: 25793,wrong: 21 id: 34,score: 2581965,wrong: 0 id: 79,score: 2615320,wrong: 0 id: 72,score: 2703,wrong: 31 id: 3,score: 2711668,wrong: 0 id: 24,score: 3,wrong: 62 id: 25,score: 3,wrong: 64 If we used the notation introduced here, the file would be sorted in vim easily.\n:sort /score: / In fact, vim can also do numerical comparison, without new notation,\n:sort /score: \\d*/ n r Code def convert_to_new_notation(number: float) -\u0026gt; str: \u0026#34;\u0026#34;\u0026#34; Convert a number to the new notation. \u0026gt;\u0026gt;\u0026gt; convert_to_new_notation(349412349) \u0026#39;pep0008b3.49\u0026#39; \u0026#34;\u0026#34;\u0026#34; if number == 0: return \u0026#34;pep0000b0.00\u0026#34; sign = \u0026#34;p\u0026#34; if number \u0026gt;= 0 else \u0026#34;m\u0026#34; number = abs(number) import math exponent = int(math.log10(number)) exponent_sign= \u0026#34;p\u0026#34; if exponent \u0026lt; 0 : exponent -= 1 exponent_sign = \u0026#34;m\u0026#34; exponent = abs(exponent) mantissa = 0.0 if exponent_sign == \u0026#39;p\u0026#39; : mantissa = number / (10 ** exponent) else: mantissa = number * (10 ** abs(exponent)) return f\u0026#34;{sign}e{exponent_sign}{exponent:04d}b{mantissa:04.2f}\u0026#34; def convert_from_new_notation(number: str) -\u0026gt; float: \u0026#34;\u0026#34;\u0026#34; Convert a number from the new notation. Note that the number only accurate upto 2 significant digits. \u0026gt;\u0026gt;\u0026gt; convert_from_new_notation(\u0026#39;pep0008b3.49\u0026#39;) 349000000.0 \u0026#34;\u0026#34;\u0026#34; sign = 1 if number[0] == \u0026#39;p\u0026#39; else -1 exponent_sign = 1 if number[2] == \u0026#39;p\u0026#39; else -1 exponent = int(number[3:7]) * exponent_sign mantissa = float(number[8:]) return sign * mantissa * (10 ** exponent) dict_test = { 745: \u0026#39;pep0002b7.45\u0026#39;, -344: \u0026#39;mep0002b3.44\u0026#39;, 364: \u0026#39;pep0002b3.64\u0026#39;, 81: \u0026#39;pep0001b8.10\u0026#39;, -1000: \u0026#39;mep0003b1.00\u0026#39;, -805: \u0026#39;mep0002b8.05\u0026#39;, 615: \u0026#39;pep0002b6.15\u0026#39;, -798: \u0026#39;mep0002b7.98\u0026#39;, 749: \u0026#39;pep0002b7.49\u0026#39;, -907: \u0026#39;mep0002b9.07\u0026#39;, 34345: \u0026#39;pep0004b3.43\u0026#39;, 3434.5: \u0026#39;pep0003b3.43\u0026#39;, 343.45: \u0026#39;pep0002b3.43\u0026#39;, 34.345: \u0026#39;pep0001b3.43\u0026#39;, 3.4345: \u0026#39;pep0000b3.43\u0026#39;, 34345: \u0026#39;pep0000b0.34\u0026#39;, 34345: \u0026#39;pem0002b3.43\u0026#39;, 34345: \u0026#39;pem0003b3.43\u0026#39;} assert all(convert_to_new_notation(k) == v for k, v in dict_test.items()) Did you find this page helpful? Consider sharing it üôå\n","date":1692057600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1692057600,"objectID":"ee8637dfe943bf72678d19dd40b784a3","permalink":"https://example.com/post/writing-scientific-numbers/","publishdate":"2023-08-15T00:00:00Z","relpermalink":"/post/writing-scientific-numbers/","section":"post","summary":"Introduction We discuss a minor modification in the way numbers are written in the scientific notation with the goal to make them more readable, both for humans and computers.\nUsually, numbers such as $134139349145$ are hard to parse.","tags":null,"title":"Writing numbers in scientific notations","type":"post"},{"authors":["Miguel S. Costa","Vasco Goncalves","Aaditya Salgarkar","Joao Vilas Boas"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1684281600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684281600,"objectID":"7c082250641a66ce37927a98b8f34b3f","permalink":"https://example.com/publication/conformal-multiregge/","publishdate":"2023-05-17T00:00:00Z","relpermalink":"/publication/conformal-multiregge/","section":"publication","summary":"Generalized the analysis of the multi-Regge limit of scattering amplitudes to the case of conformal field theories.","tags":["Conformal field theory, bootstrap, Regge limit, String theory."],"title":"Conformal multi-Regge theory","type":"publication"},{"authors":["Ant√≥nio Antunes","Miguel S. Costa","Jo√£o Penedones","Aaditya Salgarkar","Balt C. van Rees"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1639440000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639440000,"objectID":"1f59381ce00f2af29b77d127a3ea1b84","permalink":"https://example.com/publication/sginads/","publishdate":"2021-12-14T00:00:00Z","relpermalink":"/publication/sginads/","section":"publication","summary":"Used conformal bootstrap techniques using convex optimization to find new results in quantum field theory.","tags":["Conformal field theory, bootstrap, RG flows."],"title":"Towards bootstrapping RG flows: sine-Gordon in AdS","type":"publication"},{"authors":["Ant√≥nio Antunes","Miguel S. Costa","Tobias Hansen","Aaditya Salgarkar","Sourav Sarkar"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1618963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618963200,"objectID":"19e6424177d83f055250f78610eac7d2","permalink":"https://example.com/publication/reggeinads/","publishdate":"2021-04-21T00:00:00Z","relpermalink":"/publication/reggeinads/","section":"publication","summary":"Generalized the analysis of Regge limit to finite 't Hooft coupling in AdS/CFT.","tags":["Conformal field theory, bootstrap, Regge limit, String theory."],"title":"The perturbative CFT optical theorem and high-energy string scattering in AdS at one loop","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let‚Äôs make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]